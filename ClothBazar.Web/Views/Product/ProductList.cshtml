@model ProductSearchViewModels

<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css"/>
<script src="//cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>

@*<script src="~/Scripts/jquery-1.10.2.js"></script>*@

<div id="tableContiner">

    <div class="container">
        <form class="form-inline" method="post">
            <div class="form-group mb-2 ">
                <input id="searchtxt" class="form-control" name="Search" value="@Model.SearchTerm" />
                <button class="btn btn-primary ml-1" type="button" id="search">Search</button>
                <button class="btn btn-primary ml-1" type="button" id="reset">Reset</button>
                <button class="btn btn-primary ml-1" type="button" id="NewBtn" >New</button>
            </div>
        </form>
    </div>
    <div >
        <table id="ProductsTable" class="table table-striped">
            <thead>
                <tr>
                    <th class="font-weight-bold">Product Name</th>
                    <th class="font-weight-bold">Category</th>
                    <th class="font-weight-bold">Price</th>
                    <th class="font-weight-bold wrap-td">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Products != null && Model.Products.Count > 0)
            {
                foreach (var product in Model.Products)
                {
                        <tr>
                            <td>@product.Name</td>
                            <td>
                                @if (product.Category != null)
                                {
                                    <text>@product.Category.Name</text>
                                }
                                else
                                {
                                    <text>-</text>
                                }
                            </td>
                            <td>@product.Price</td>
                            <td class="wrap-td">
                                <button class="EditBtn" data-id="@product.ID">Edit</button>
                                <button class="DelBtn" data-id="@product.ID">Delete</button>
                                <button class="addtoCart" data-id="@product.ID">Add To Card</button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="text-danger">No Product found.</td>
                    </tr>
                }
            </tbody>
        </table>
        <div>
      
            @if (Model.Pager != null && Model.Pager.TotalPages > 1)
            {
                if (Model.Pager.CurrentPage > 1)
                {
                    <button class="pageRecords" data-pageno="1">First</button>
                    <button class="pageRecords" data-pageno="@(Model.Pager.CurrentPage - 1)">Previous</button>
                }
                for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                {
                    string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                    <button class="@activeClass pageRecords" data-pageno="@page">@page</button>
                }
                if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                {
                    <button class="pageRecords" data-pageno="@(Model.Pager.CurrentPage + 1)">Next</button>
                    <button class="pageRecords" data-pageno="@(Model.Pager.EndPage)">Last</button>
                }
            }
        </div>
    </div>
  
</div>
<div id="AddProductCon">

</div>


<script>

    //$('#ProductsTable').DataTable();


    $(".pageRecords").click(function () {
        $.ajax({
            url: '@Url.Action("ProductList", "Product")',
            data: {
                pageNo: $(this).attr("data-pageno")
            }
        })
        .done(function (response) {
            $("#tableContiner").html(response);
        })

        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        })
    });



    $("#search").click(function () {
        var txtvalue = $("#searchtxt").val();
        $.ajax({
            url: '@Url.Action("ProductList", "Product")',
            data: {
                search: txtvalue
            }
        }).done(function (data) {

            $("#tableContiner").html(data);
            //alert(data);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        })

    });

    $("#reset").click(function () {
        var txtvalue = '';
        $.ajax({
            url: '@Url.Action("ProductList", "Product")',
            data: {
                search: txtvalue
            }
        }).done(function (data) {

            $("#tableContiner").html(data);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        })

    });

    $("#NewBtn").click(function () {
        $.ajax({
            url: '@Url.Action("Create", "Product")',
        })
        .done(function (response) {
            $("#AddProductCon").html(response);
            focusAction("AddProductCon");
        })

        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        })
    });

    $(".EditBtn").click(function () {
        $.ajax({
            url:  '@Url.Action("Edit", "Product")',
            data: {
                ID: $(this).attr('data-id')
            }
        })
        .done(function (response) {
            $("#AddProductCon").html(response);

            focusAction("AddProductCon");

        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        })
    });

    $(".DelBtn").click(function () {

            swal({
                title: "Are you sure?",
                text: "Are you sure you want to delete this product?",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {

                        $.ajax({
                            type: 'POST',
                            url:  '@Url.Action("Delete", "Product")',
                            data: {
                                ID: $(this).attr('data-id')
                            }
                        })
                        .done(function (response) {
                            $("#tableContiner").html(response);
                            swal("Record deleted Successfully.!", {
                                icon: "success",
                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("FAIL");
                        })

                    });
                }
            });

        //var confirmsms = confirm("Are you sure you want to delete this product?");

        //if (confirmsms) {
        //    $.ajax({
        //        type: 'POST',
        //        url: '/Product/Delete',
        //        data: {
        //            ID: $(this).attr('data-id')
        //        }
        //    })
        //   .done(function (response) {
        //       $("#tableContiner").html(response);
        //   })
        //   .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        //       alert("FAIL");
        //   })
        //}

    });

    var products = [];
    $(".addtoCart").click(function () {

        var productID = $(this).attr('data-id');
        products.push(productID);
        $.cookie('CartProducts', products.join('-'), { path: '/' });
        alert('Product Addd to Cart.');
    });

    function focusAction(controlToFocus) {
        $('html , body').animate({
            scrollTop: $("#" + controlToFocus).offset().top - 100
        }, 1000);
    }
    //function focusAction() {
    //    $('html , body').animate({
    //        scrollTop: $("#AddProductCon").offset().top - 100
    //    }, 1000);
    //}
</script>



